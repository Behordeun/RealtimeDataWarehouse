{
    "tableName": "transaction_facts",
    "tableType": "REALTIME",
    "segmentConfig": {
        "timeColumnName": "transaction_date",
        "timeType": "MILLISECONDS",
        "replication": 1,
        "schemaName": "transaction_facts"
    },
    "tenants": {
        "broker": "DefaultTenant",
        "server": "DefaultTenant"
    },
    "tableIndexConfig": {
        "loadMode": "MMAP",
        "invertedIndexColumns": ["transaction_type", "currency", "branch_id"],
        "sortedColumns": ["transaction_date"]
    },
    "ingestionConfig": {
        "streamIngestionConfig": {
            "streamConfigMaps": {
                "realtime.segment.flush.threshold.rows": "5000",
                "stream.kafka.decoder.prop.format": "JSON",
                "key.serializer": "org.apache.kafka.common.serialization.StringSerializer",
                "stream.kafka.decoder.class.name": "org.apache.pinot.plugin.stream.kafka.KafkaJSONMessageDecoder",
                "streamType": "kafka",
                "value.serializer": "org.apache.kafka.common.serialization.StringDeserializer",
                "stream.kafka.consumer.type": "LOWLEVEL",
                "realtime.segment.flush.segment.rows": "5000",
                "stream.kafka.broker.list": "kafka_broker:9092",
                "stream.segment.flush.threshold.time": "3600000",
                "stream.kafka.consumer.factory.class.name": "org.apache.pinot.plugin.stream.kafka.KafkaConsumerFactory",
                "stream.kafka.consumer.prop.auto.offset.reset": "smallest",
                "stream.kafka.topic.name": "transaction_facts"
            }
        },
        "transformConfigs": [],
        "continueOnError": true,
        "rowTimeValueCheck": true,
        "segmentTypeValueCheck": false
    },
    "metadata": {
        "customConfigs": {}
    },
    "isDimTable": false
}
